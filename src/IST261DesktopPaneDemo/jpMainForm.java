/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package IST261DesktopPaneDemo;

import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author admin_whb108
 */
public class jpMainForm extends javax.swing.JPanel {

    /**
     * Creates new form jpMainForm
     */
    public jpMainForm(ResultSet rsData, ArrayList alColumns, int intKeyCol) 
    {
        initComponents();
        try {
            ResultSetMetaData md = rsData.getMetaData();
            int intCols = md.getColumnCount();
            int intCurrentCol = 0;
            for (int intLCV = 0;intLCV < intCols;intLCV++)
            {
                if (alColumns.contains(new Integer(intLCV)))
                {
                   
                } // if
                    } // for
					
/*

TODO - look at this http://technojeeves.com/index.php/22-resultset-to-tablemodel



 TODO - implement the following code, which was adapted from
 http://www.rgagnon.com/javadetails/java-0309.html
 
 
 
 // TableModel definition
String[] tableColumnsName = {"col 1","col 2","col 3"}; 
DefaultTableModel aModel = (DefaultTableModel) aTable.getModel();
aModel.setColumnIdentifiers(tableColumnsName);

// the query
ResultSet rs = 
   statement.executeQuery("select col1,col2,col3 from mytable");

// Loop through the ResultSet and transfer in the Model
java.sql.ResultSetMetaData rsmd = rs.getMetaData();
int colNo = rsmd.getColumnCount();
while(rs.next()){
 Object[] objects = new Object[colNo];
 // tanks to umit ozkan for the bug fix!
 for(int i=0;i<colNo;i++){
  objects[i]=rs.getObject(i+1);
  }
 aModel.addRow(objects);
}
aTable.setModel(aModel);


------  OR ------




Abdul Jabbar WebBestow  â€¢ 3 years ago  





I think this is the Easiest way to populate a table with ResultSet.

import net.proteanit.sql.DbUtils;

try
 {
 CreateConnection();
 PreparedStatement st =conn.prepareStatement("Select * from ABC;");
 ResultSet rs = st.executeQuery();
 tblToBeFilled.setModel(DbUtils.resultSetToTableModel(rs));
 conn.close();
 }
 catch(Exception ex)
 { 
 JOptionPane.showMessageDialog(null, ex.toString());
 }

include rs2xml.jar in your libraries. Have Funnnn!!!!!


*/
        } catch (SQLException ex) {
            Logger.getLogger(jpMainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtData = new javax.swing.JTable();

        jtData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtData;
    // End of variables declaration//GEN-END:variables
}
