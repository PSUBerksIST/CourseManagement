/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.psu.berksist.CourseEZ;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author casey_000
 */
public class jpEditCourse extends javax.swing.JPanel 
{
    
    private Connection dbLocalConnection;
    private PreparedStatement pst;
    private Statement st;
    private int intCourseID;
    
    //list of variables for passing to database
    private String strDepartment = "default value";
    private int intDepartment;
        
    String strCourseNumber = "default value";
    int intCourseNumber = 123456789;
        
    int intWritingEmphasis = 123456789;
        
    String strCredits = "default value";
    int intCredits = 123456789;

    String strCourseTitle = "default value";
    String strDescription = "default value";
    String strObjectives = "default value";
    String strPrerequisites = "default value";        
    String strNotes = "default value";
    
    
    public jpEditCourse() 
    {
        initComponents();
    }
    public jpEditCourse(Connection inConnection, int CourseID)
    {
        setdbConnection(inConnection);
        initComponents();
        setJcbDepartment();
        setCourseID(CourseID);
        getCurrentCourseData();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jlbCourseTitle = new javax.swing.JLabel();
        jtfCourseTitle = new javax.swing.JTextField();
        jlbCourseDescription = new javax.swing.JLabel();
        jlbCourseNumber = new javax.swing.JLabel();
        jtfCourseNumber = new javax.swing.JTextField();
        jlbCredits = new javax.swing.JLabel();
        jcbCredits = new javax.swing.JComboBox<String>();
        jlbWritingEmphasis = new javax.swing.JLabel();
        jcbWritingEmphasis = new javax.swing.JComboBox<String>();
        jlbDepartment = new javax.swing.JLabel();
        jcbDepartment = new javax.swing.JComboBox<String>();
        jlbObjectives = new javax.swing.JLabel();
        jtfObjectives = new javax.swing.JTextField();
        jlbPrerequisites = new javax.swing.JLabel();
        jtfPrerequisites = new javax.swing.JTextField();
        jlbNotes = new javax.swing.JLabel();
        jtfNotes = new javax.swing.JTextField();
        jbUpdateButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtaDescription = new javax.swing.JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jlbCourseTitle.setText("Course Title");

        jtfCourseTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCourseTitleActionPerformed(evt);
            }
        });

        jlbCourseDescription.setText("Course Description");

        jlbCourseNumber.setText("Course Number");

        jlbCredits.setText("Credits");

        jcbCredits.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1","2","3","4" }));
        jcbCredits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCreditsActionPerformed(evt);
            }
        });

        jlbWritingEmphasis.setText("Writing Emphasis");

        jcbWritingEmphasis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Yes" }));

        jlbDepartment.setText("Department");

        jcbDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default Item"}));
        jcbDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbDepartmentActionPerformed(evt);
            }
        });

        jlbObjectives.setText("Objectives");

        jlbPrerequisites.setText("Prerequisites");

        jtfPrerequisites.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPrerequisitesActionPerformed(evt);
            }
        });

        jlbNotes.setText("Notes");

        jbUpdateButton.setText("Update");
        jbUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbUpdateButtonActionPerformed(evt);
            }
        });

        jtaDescription.setColumns(20);
        jtaDescription.setRows(5);
        jScrollPane2.setViewportView(jtaDescription);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbUpdateButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlbNotes)
                            .addComponent(jlbPrerequisites)
                            .addComponent(jlbObjectives)
                            .addComponent(jlbDepartment)
                            .addComponent(jlbCourseNumber)
                            .addComponent(jlbCourseTitle)
                            .addComponent(jlbCourseDescription))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfPrerequisites)
                            .addComponent(jtfObjectives)
                            .addComponent(jtfCourseTitle)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jtfCourseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                                .addComponent(jlbCredits)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbCredits, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(jlbWritingEmphasis)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbWritingEmphasis, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtfNotes)
                            .addComponent(jScrollPane2))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbCourseTitle)
                    .addComponent(jtfCourseTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbCourseDescription)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCourseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbCourseNumber)
                    .addComponent(jlbCredits)
                    .addComponent(jcbCredits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbWritingEmphasis)
                    .addComponent(jcbWritingEmphasis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbDepartment))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbObjectives)
                    .addComponent(jtfObjectives, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbPrerequisites)
                    .addComponent(jtfPrerequisites, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNotes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbNotes))
                .addGap(18, 18, 18)
                .addComponent(jbUpdateButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtfCourseTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCourseTitleActionPerformed
        
    }//GEN-LAST:event_jtfCourseTitleActionPerformed

    private void jcbDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbDepartmentActionPerformed
        
    }//GEN-LAST:event_jcbDepartmentActionPerformed
    private void setCourseID(int inCourseID){
        intCourseID = inCourseID;
    }
    private void getCurrentCourseData()
    { 
        try {
            
            Statement st = dbLocalConnection.createStatement();
            ResultSet rs = st.executeQuery("SELECT ID, FKDepartment, Number, WritingEmphasis, Credits, Title, Description, Objectives, Prerequisite, Notes FROM Course Where ID =" + intCourseID);
            while (rs.next()) {
                System.out.println(rs.getInt("ID"));
                System.out.println("");
                System.out.println(rs.getInt("Credits"));
                jtfCourseNumber.setText(rs.getInt("Number")+"");
                jtfCourseTitle.setText(rs.getString("Title"));
                jtaDescription.setText(rs.getString("Description"));
                jcbCredits.setSelectedIndex(rs.getInt("Credits")-1);
                
                //TODO: Fix the index out of bounds exception - RQZ
                jcbWritingEmphasis.setSelectedIndex(rs.getInt("WritingEmphasis"));
                jcbDepartment.setSelectedIndex(rs.getInt("FKDepartment")-1);
                jtfObjectives.setText(rs.getString("Objectives"));
                jtfPrerequisites.setText(rs.getString("Prerequisite"));
                jtfNotes.setText(rs.getString("Notes"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(jpEditCourse.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void getInput()
{
        //-----pull fields from UI, place contents into class variables to pass to database----
        strDepartment = String.valueOf(jcbDepartment.getSelectedIndex());
        strCourseNumber = jtfCourseNumber.getText();//pulling string from java text field
        intCourseNumber = Integer.parseInt(strCourseNumber);//set integer to java text field input  
        
        //check jcbWritingEmphasis for selected value, put integer into intWritingEmphasis for database
        if (jcbWritingEmphasis.getSelectedItem() == "Yes")
        {
            intWritingEmphasis = 1;
        }//if
        if (jcbWritingEmphasis.getSelectedItem() == "No")
        {
            intWritingEmphasis = 0;
        }//if        
        intDepartment = Integer.parseInt(strDepartment);
        strCredits = String.valueOf(jcbCredits.getSelectedItem());//pulling string from java text field
        intCredits = Integer.parseInt(strCredits);//set integer to java text field input
        
        strCourseTitle = jtfCourseTitle.getText();
        strDescription = jtaDescription.getText();
        strObjectives = jtfObjectives.getText();
        strPrerequisites = jtfPrerequisites.getText();
        strNotes = jtfNotes.getText();
}

private void databaseUpdate()
{
    //String strCurrentSelection = "default value";
    
    try
    {
        String query = " UPDATE Course Set FKDepartment = ?, Number = ?, WritingEmphasis = ?, Credits = ?, Title = ?, Description = ?, Objectives = ?, Prerequisite = ?, Notes = ? where id = "+ intCourseID+";";
        pst = dbLocalConnection.prepareStatement(query);
        //stmAddClassStatement.executeUpdate("INSERT INTO Course VALUES ('" + strCourseTitle + "', " + );
        pst.setInt(1, intDepartment +1);
        pst.setInt(2, intCourseNumber);
        pst.setInt(3, intWritingEmphasis);
        pst.setInt(4, intCredits);
        pst.setString(5, strCourseTitle);
        pst.setString(6, strDescription);
        pst.setString(7, strObjectives);
        pst.setString(8, strPrerequisites);
        pst.setString(9, strNotes);
        pst.executeUpdate();
    }//try loop
    catch (Exception e) 
    { 
        System.err.println("jpAddCourse SQL Exception detected in databaseInsert()."); 
        System.err.println(e.getMessage()); 
    }//catch statements
    
}


private void setdbConnection(Connection inConnection)
{
    dbLocalConnection = inConnection;
    try 
    {
        st = dbLocalConnection.createStatement();
    } //try
    catch (SQLException ex) 
    {
        System.out.println(ex);
    }//catch
}

private int getFKDepartment(String inSelectedDepartment)
{//return ID from Department table of SQL database for department highlighted in jcbDepartment 
    String strSelectedDepartment = "Default Value";
    int intSelectedDepartment = 123456789;
    
    
    
    strSelectedDepartment = inSelectedDepartment;
    
    try
    {
        ResultSet rsResult = st.executeQuery("select ID from Department where DepartmentName = '" + strSelectedDepartment + "'");
        intSelectedDepartment = rsResult.getInt(1);
    }//try
    catch (SQLException sqle)
    {
        System.err.println("jpAddCourse SQL Exception detected in getFKDepartment()");
        System.out.println(sqle);                
    }//catch

    return intSelectedDepartment;
}

private void setJcbDepartment()
{
    //clean out defaults in jcbDepartment, pull list from SQL database and populate jcbDepartment
    jcbDepartment.removeAllItems();
    try
    {
        ResultSet rsResults = st.executeQuery("select DepartmentName from Department order by ID asc");

        while (rsResults.next())
        {
            jcbDepartment.addItem(rsResults.getString("DepartmentName"));
        }//while

    }//try
    catch (SQLException sqle) 
    {
        System.err.println("jpEditCourse SQL Exception detected in setJcbDepartment().");
        System.out.println(sqle);
    }//catch SQL exceptions
}
    private void jtfPrerequisitesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPrerequisitesActionPerformed
        
    }//GEN-LAST:event_jtfPrerequisitesActionPerformed

    private void jbUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbUpdateButtonActionPerformed

        getInput();
        databaseUpdate();
        this.getTopLevelAncestor().setVisible(false);
        
        //int intSelectedDepartment = Integer.parseInt(strSelectedDepartment);
        //databaseInsert(getFKDepartment(strDepartment));
    }//GEN-LAST:event_jbUpdateButtonActionPerformed

    private void jcbCreditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCreditsActionPerformed
        
    }//GEN-LAST:event_jcbCreditsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbUpdateButton;
    private javax.swing.JComboBox<String> jcbCredits;
    private javax.swing.JComboBox<String> jcbDepartment;
    private javax.swing.JComboBox<String> jcbWritingEmphasis;
    private javax.swing.JLabel jlbCourseDescription;
    private javax.swing.JLabel jlbCourseNumber;
    private javax.swing.JLabel jlbCourseTitle;
    private javax.swing.JLabel jlbCredits;
    private javax.swing.JLabel jlbDepartment;
    private javax.swing.JLabel jlbNotes;
    private javax.swing.JLabel jlbObjectives;
    private javax.swing.JLabel jlbPrerequisites;
    private javax.swing.JLabel jlbWritingEmphasis;
    private javax.swing.JTextArea jtaDescription;
    private javax.swing.JTextField jtfCourseNumber;
    private javax.swing.JTextField jtfCourseTitle;
    private javax.swing.JTextField jtfNotes;
    private javax.swing.JTextField jtfObjectives;
    private javax.swing.JTextField jtfPrerequisites;
    // End of variables declaration//GEN-END:variables
}
