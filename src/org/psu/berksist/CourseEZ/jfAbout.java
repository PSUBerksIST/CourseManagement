/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.psu.berksist.CourseEZ;

import java.io.*;

/**
 *
 * @author jss5783
 * 
 * 
 * 
 *  ******************* MODIFICATION LOG *****************************************
 * 2017 March 30 -  Cleaned up rbtnContributorsActionPerformed code.
 *                  Removed rbtnChangelog, associated code, and TXT file.
 *                  Added rbtnTools and associated code.
 *                  Added lblDescription.
 *                  Changed rbtnLicenses to rbtnLibraries and associated code and TXT file. -JSS
 * 2017 March 29 -  Created jfAbout.java. Added basic rough functionality. - JSS
 */
public class jfAbout extends javax.swing.JFrame {

    /**
     * Creates new form jfAbout
     */
    public jfAbout() {
        initComponents();
        
        //register radio buttons to button group
        bgrpAbout.add(rbtnTools);
        bgrpAbout.add(rbtnContributors);
        bgrpAbout.add(rbtnLibraries);
        
        rbtnContributors.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgrpAbout = new javax.swing.ButtonGroup();
        jpText = new javax.swing.JPanel();
        jpAboutTitle = new javax.swing.JPanel();
        lblVersion = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        jspText = new javax.swing.JScrollPane();
        jtpText = new javax.swing.JTextPane();
        jpRadioButtons = new javax.swing.JPanel();
        rbtnTools = new javax.swing.JRadioButton();
        rbtnLibraries = new javax.swing.JRadioButton();
        rbtnContributors = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblVersion.setText("VERSION_NUMBER");

        lblTitle.setFont(new java.awt.Font("DejaVu Sans", 0, 24)); // NOI18N
        lblTitle.setText("Course Management");

        lblDescription.setText("An open-source program for managing courses by teachers.");

        javax.swing.GroupLayout jpAboutTitleLayout = new javax.swing.GroupLayout(jpAboutTitle);
        jpAboutTitle.setLayout(jpAboutTitleLayout);
        jpAboutTitleLayout.setHorizontalGroup(
            jpAboutTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAboutTitleLayout.createSequentialGroup()
                .addGroup(jpAboutTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAboutTitleLayout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(lblTitle))
                    .addGroup(jpAboutTitleLayout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addComponent(lblVersion))
                    .addGroup(jpAboutTitleLayout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(lblDescription)))
                .addContainerGap(228, Short.MAX_VALUE))
        );
        jpAboutTitleLayout.setVerticalGroup(
            jpAboutTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAboutTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblVersion)
                .addGap(18, 18, 18)
                .addComponent(lblDescription)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jspText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jspText.setViewportView(jtpText);

        javax.swing.GroupLayout jpTextLayout = new javax.swing.GroupLayout(jpText);
        jpText.setLayout(jpTextLayout);
        jpTextLayout.setHorizontalGroup(
            jpTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTextLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jspText)
                    .addComponent(jpAboutTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpTextLayout.setVerticalGroup(
            jpTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTextLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpAboutTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jspText, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jpText, java.awt.BorderLayout.PAGE_START);

        rbtnTools.setText("Tools");
        rbtnTools.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnToolsActionPerformed(evt);
            }
        });

        rbtnLibraries.setText("Libraries");
        rbtnLibraries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnLibrariesActionPerformed(evt);
            }
        });

        rbtnContributors.setText("Contributors");
        rbtnContributors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnContributorsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpRadioButtonsLayout = new javax.swing.GroupLayout(jpRadioButtons);
        jpRadioButtons.setLayout(jpRadioButtonsLayout);
        jpRadioButtonsLayout.setHorizontalGroup(
            jpRadioButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRadioButtonsLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(rbtnContributors)
                .addGap(107, 107, 107)
                .addComponent(rbtnLibraries)
                .addGap(101, 101, 101)
                .addComponent(rbtnTools)
                .addContainerGap(197, Short.MAX_VALUE))
        );
        jpRadioButtonsLayout.setVerticalGroup(
            jpRadioButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpRadioButtonsLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jpRadioButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnTools)
                    .addComponent(rbtnLibraries)
                    .addComponent(rbtnContributors))
                .addContainerGap())
        );

        getContentPane().add(jpRadioButtons, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Loads tools.txt into jtpText.
     * @param evt 
     */
    private void rbtnToolsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnToolsActionPerformed
        //TODO: Fix rough code up, add comments, add more/more detailed exceptions
        try
        {
            File fTools = new File(AppConstants.ROOT_FOLDER + "tools.txt");
            if (fTools.exists() == true)
            {
                BufferedReader reader = new BufferedReader(new FileReader(fTools));
                String strInput = new String();
                String strFile = new String("===List of tools used===\n");
                while ((strInput = reader.readLine()) != null)
                {
                    String[] astrInput = strInput.split(",");
                    strFile += astrInput[0] + " (" + astrInput[1] + "): " + astrInput[2] + "\n\n";
                }
                jtpText.setText(strFile);
                reader.close();
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        jspText.getVerticalScrollBar().setValue(1);
    }//GEN-LAST:event_rbtnToolsActionPerformed

    /**
     * Loads contributors.txt into jtpText.
     * Contributors are listed as "[first name] [last name] ([contact information])".
     * The project head's name is listed first and indicated as such.
     * TODO: Possibly with additional contact details?
     * @param evt 
     */
    private void rbtnContributorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnContributorsActionPerformed
        //TODO: Fix rough code up, add comments, add more/more detailed exceptions
        try //check if contributors.txt exists
        {   //TODO: Is there a way to check for the filepath without needing a /case-sensitive/ file extension attached?
            File fContributors = new File(AppConstants.ROOT_FOLDER + "contributors.txt");
            
            if (fContributors.exists() == true) //if the file exists, try opening it
            {
                try
                {
                    BufferedReader reader = new BufferedReader(new FileReader(fContributors));
                    String strInput = new String();
                    String strFile = new String("===List of all contributors (and contact information)===\n");
//                String strFirstName = new String();
//                String strLastName = new String();
//                String strGitHubAccount = new String();
                    while ((strInput = reader.readLine()) != null)
                    {
                        String[] astrInput = strInput.split(",");
                        strFile += astrInput[0] + " " + astrInput[1] + " (" + astrInput[2] + ")\n";
//                    strFile += astrInput[0] + " " + astrInput[1] + " (" + strGitHubAccount + ")\n";
//                    strFirstName = strInput.substring(0, strInput.indexOf(',') );
//                    strLastName = strInput.substring(strInput.indexOf(',') + 1, strInput.lastIndexOf(',') );
//                    strGitHubAccount = strInput.substring(strInput.lastIndexOf(',') + 1, strInput.length() - 1);
//                    strFile += strFirstName + " " + strLastName + " (" + strGitHubAccount + ")\n";
                    }
                    jtpText.setText(strFile);
                    reader.close();
                }
                catch (Exception e)
                {
                    e.printStackTrace();
                }
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        jspText.getVerticalScrollBar().setValue(1);
    }//GEN-LAST:event_rbtnContributorsActionPerformed

    /**
     * Loads libraries.txt into jtpText in alphabetical order, aside from Course Management's license at the top.
     * libraries.txt is the list of of libraries and what licenses they operate under, basically; any required license texts (e.g.,
     * Apache License v2.0's short license, which in turn points to the full license online) are included
     * separately in the resources folder itself.
     * @param evt 
     */
    private void rbtnLibrariesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnLibrariesActionPerformed
        //TODO: Fix rough code up, add comments, add more/more detailed exceptions
        //BUG TODO: Fix this. For some reason, it won't read libraries.txt. Switching to tools.txt works,
        //but creating libraries.txt from scratch doesn't work.
        //Copying tools.txt's contents works, so it's the contents of libraries.txt for some reason.
        try
        {
            //File fLibraries = new File(AppConstants.ROOT_FOLDER + "libraries.txt");
            //if (fLibraries.exists() == true)
            //{
                BufferedReader reader = new BufferedReader(new FileReader(AppConstants.ROOT_FOLDER + "libraries.txt"));
                String strInput = new String();
                String strFile = new String("===List of libraries used===\n");
                while ((strInput = reader.readLine()) != null)
                {
                    String[] astrInput = strInput.split(",");
                    strFile += astrInput[0] + " (" + astrInput[1] + "): " + astrInput[2] + "\n\n";
                }
                jtpText.setText(strFile);
                reader.close();
            //}
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        jspText.getVerticalScrollBar().setValue(1);
    }//GEN-LAST:event_rbtnLibrariesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgrpAbout;
    private javax.swing.JPanel jpAboutTitle;
    private javax.swing.JPanel jpRadioButtons;
    private javax.swing.JPanel jpText;
    private javax.swing.JScrollPane jspText;
    private javax.swing.JTextPane jtpText;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblVersion;
    private javax.swing.JRadioButton rbtnContributors;
    private javax.swing.JRadioButton rbtnLibraries;
    private javax.swing.JRadioButton rbtnTools;
    // End of variables declaration//GEN-END:variables
}
