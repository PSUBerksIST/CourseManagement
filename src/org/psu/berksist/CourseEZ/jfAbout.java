/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.psu.berksist.CourseEZ;

import java.io.*;

/**
 *
 * @author jss5783
 * 
 * 
 * 
 *  ******************* MODIFICATION LOG *****************************************
 * 2017 March 29 - Created jfAbout.java. Added basic rough functionality. - JSS
 */
public class jfAbout extends javax.swing.JFrame {

    /**
     * Creates new form jfAbout
     */
    public jfAbout() {
        initComponents();
        
        //register radio buttons to button group
        bgrpAbout.add(rbtnChangelog);
        bgrpAbout.add(rbtnContributors);
        bgrpAbout.add(rbtnLicenses);
        
        rbtnChangelog.doClick();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgrpAbout = new javax.swing.ButtonGroup();
        jpText = new javax.swing.JPanel();
        jpAboutTitle = new javax.swing.JPanel();
        lblVersion = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        jspText = new javax.swing.JScrollPane();
        jtpText = new javax.swing.JTextPane();
        jpRadioButtons = new javax.swing.JPanel();
        rbtnChangelog = new javax.swing.JRadioButton();
        rbtnLicenses = new javax.swing.JRadioButton();
        rbtnContributors = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblVersion.setText("VERSION_NUMBER");

        lblTitle.setFont(new java.awt.Font("DejaVu Sans", 0, 24)); // NOI18N
        lblTitle.setText("Course Management");

        javax.swing.GroupLayout jpAboutTitleLayout = new javax.swing.GroupLayout(jpAboutTitle);
        jpAboutTitle.setLayout(jpAboutTitleLayout);
        jpAboutTitleLayout.setHorizontalGroup(
            jpAboutTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAboutTitleLayout.createSequentialGroup()
                .addGroup(jpAboutTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAboutTitleLayout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(lblTitle))
                    .addGroup(jpAboutTitleLayout.createSequentialGroup()
                        .addGap(292, 292, 292)
                        .addComponent(lblVersion)))
                .addContainerGap(235, Short.MAX_VALUE))
        );
        jpAboutTitleLayout.setVerticalGroup(
            jpAboutTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAboutTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblVersion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jspText.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jspText.setViewportView(jtpText);

        javax.swing.GroupLayout jpTextLayout = new javax.swing.GroupLayout(jpText);
        jpText.setLayout(jpTextLayout);
        jpTextLayout.setHorizontalGroup(
            jpTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTextLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jspText)
                    .addComponent(jpAboutTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpTextLayout.setVerticalGroup(
            jpTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTextLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpAboutTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jspText, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jpText, java.awt.BorderLayout.PAGE_START);

        rbtnChangelog.setText("Changelog");
        rbtnChangelog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnChangelogActionPerformed(evt);
            }
        });

        rbtnLicenses.setText("Licenses");
        rbtnLicenses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnLicensesActionPerformed(evt);
            }
        });

        rbtnContributors.setText("Contributors");
        rbtnContributors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnContributorsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpRadioButtonsLayout = new javax.swing.GroupLayout(jpRadioButtons);
        jpRadioButtons.setLayout(jpRadioButtonsLayout);
        jpRadioButtonsLayout.setHorizontalGroup(
            jpRadioButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRadioButtonsLayout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(rbtnChangelog)
                .addGap(97, 97, 97)
                .addComponent(rbtnContributors)
                .addGap(105, 105, 105)
                .addComponent(rbtnLicenses)
                .addContainerGap(145, Short.MAX_VALUE))
        );
        jpRadioButtonsLayout.setVerticalGroup(
            jpRadioButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpRadioButtonsLayout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jpRadioButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnChangelog)
                    .addComponent(rbtnLicenses)
                    .addComponent(rbtnContributors))
                .addContainerGap())
        );

        getContentPane().add(jpRadioButtons, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Loads changelog.txt into jtpText.
     * @param evt 
     */
    private void rbtnChangelogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnChangelogActionPerformed
        //TODO: Fix rough code up, add comments, add more/more detailed exceptions
        try
        {
            File fContributors = new File(AppConstants.ROOT_FOLDER + "changelog.txt");
            
            if (fContributors.exists() == true)
            {
                BufferedReader reader = new BufferedReader(new FileReader(fContributors));
                String strFile = new String();
                String strInput = new String();
                while ((strInput = reader.readLine()) != null)
                {
                    strFile += strInput + "\n";
                }
                jtpText.setText(strFile);
                reader.close();
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        jspText.getVerticalScrollBar().setValue(1);
    }//GEN-LAST:event_rbtnChangelogActionPerformed

    /**
     * Loads contributors.txt into jtpText.
     * Contributors are listed as "[FirstName] [LastName] ([GitHubAccount])",
     * but displayed in descending alphabetical order for their last names.
     * The project head's name is listed first and indicated as such.
     * TODO: Possibly with additional contact details?
     * @param evt 
     */
    private void rbtnContributorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnContributorsActionPerformed
        //TODO: Fix rough code up, add comments, add more/more detailed exceptions
        try
        {
            File fContributors = new File(AppConstants.ROOT_FOLDER + "contributors.txt");
            
            if (fContributors.exists() == true)
            {
                BufferedReader reader = new BufferedReader(new FileReader(fContributors));
                String strFile = new String();
                String strInput = new String("---List of all contributors (and GitHub accounts)---\n");
                String strFirstName = new String();
                String strLastName = new String();
                String strGitHubAccount = new String();
                while ((strInput = reader.readLine()) != null)
                {
                    strFirstName = strInput.substring(0, strInput.indexOf(',') );
                    strLastName = strInput.substring(strInput.indexOf(',') + 1, strInput.lastIndexOf(',') );
                    strGitHubAccount = strInput.substring(strInput.lastIndexOf(',') + 1, strInput.length() - 1);
                    strFile += strFirstName + " " + strLastName + " (" + strGitHubAccount + ")\n";
                }
                jtpText.setText(strFile);
                reader.close();
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        jspText.getVerticalScrollBar().setValue(1);
    }//GEN-LAST:event_rbtnContributorsActionPerformed

    /**
     * Loads licenses.txt into jtpText in alphabetical order, aside from Course Management's license at the top.
     * @param evt 
     */
    private void rbtnLicensesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnLicensesActionPerformed
        //TODO: Fix rough code up, add comments, add more/more detailed exceptions
        try
        {
            File fContributors = new File(AppConstants.ROOT_FOLDER + "licenses.txt");
            
            if (fContributors.exists() == true)
            {
                BufferedReader reader = new BufferedReader(new FileReader(fContributors));
                String strFile = new String();
                String strInput = new String();
                while ((strInput = reader.readLine()) != null)
                {
                    strFile += strInput + "\n";
                }
                jtpText.setText(strFile);
                reader.close();
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }
        jspText.getVerticalScrollBar().setValue(1);
    }//GEN-LAST:event_rbtnLicensesActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(jfAbout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(jfAbout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(jfAbout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(jfAbout.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new jfAbout().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgrpAbout;
    private javax.swing.JPanel jpAboutTitle;
    private javax.swing.JPanel jpRadioButtons;
    private javax.swing.JPanel jpText;
    private javax.swing.JScrollPane jspText;
    private javax.swing.JTextPane jtpText;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblVersion;
    private javax.swing.JRadioButton rbtnChangelog;
    private javax.swing.JRadioButton rbtnContributors;
    private javax.swing.JRadioButton rbtnLicenses;
    // End of variables declaration//GEN-END:variables
}
